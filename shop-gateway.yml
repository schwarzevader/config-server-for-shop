

server:
  port: 8073

eureka:
  instance:
    preferIpAddress: true
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://localhost:8070/eureka



spring:
  security:
    oauth2:
      client:
        provider:
          my-keycloak-provider:
            issuer-uri: http://localhost:8080/realms/spring-microservice
            #jwk-set-uri: http://localhost:8080/realms/spring-microservices/protocol/openid-connect/certs
        registration:
          keycloak-spring-gateway-client:
            provider: my-keycloak-provider
            client-id: shop-gateway
            client-secret: QnxC5oWMzzfzxH9v9zSKIGCmeWvbX9pB
            authorization-grant-type: authorization_code
            redirect-uri: '{baseUrl}/login/oauth2/code/keycloak'





      #zipkin:
        #baseUrl: http://zipkin:9411
     # sleuth:
       # sampler:
         # percentage: 1
      cloud:
        loadbalancer.ribbon.enabled: false
        gateway:
          default-filters:
            - TokenRelay
          routes:
            #- id: shop
            uri: hhttp://localhost:8180
            predicates:
              - Path=/shop/**
     


